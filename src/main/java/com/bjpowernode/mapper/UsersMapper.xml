<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bjpowernode.mapper.UsersMapper">

    <!--定义代码片断-->
    <sql id="allColumns">
        id,username,birthday,sex,address
    </sql>
    <!--引用定义好的代码片断-->   <!--查询全部用户信息  List<Users> getAll();-->
    <select id="getAll" resultType="users" >
        select <include refid="allColumns"/> from users
    </select>

    <select id="getById" parameterType="int" resultType="users">
        select <include refid="allColumns"/> from users where id=#{id}
    </select>

    <select id="getByNameGood" parameterType="string" resultType="users">
        select <include refid="allColumns"/> from users where username like concat('%',#{username},'%')
    </select>

    <update id="update" parameterType="users">
        update users set username=#{userName},birthday=#{birthday},sex=#{sex},address=#{address} where id=#{id}
    </update>

    <insert id="insert" parameterType="users">
        <selectKey keyProperty="id" resultType="int" order="AFTER">
            select last_insert_id()
        </selectKey>
        insert into users (username,birthday,sex,address) values (#{userName},#{birthday},#{sex},#{address})
    </insert>

    <delete id="delete" parameterType="int">
        delete from users where id=#{id}
    </delete>
    <!--parameterType参数如果超过一个则不写-->
    <select id="getByNameOrAddress" resultType="users">
        select      <include refid="allColumns"/>
        from        users
        where       ${columnName}
        like        concat('%',#{columnValue},'%')
    </select>

    <select id="getByCondition" parameterType="users" resultType="users">
        select <include refid="allColumns"></include> from users
        <where>
            <if test="userName != null and userName != '' ">
                and username like concat('%',#{userName},'%')
            </if>
            <if test="birthday != null">
                and birthday = #{birthday}
            </if>
            <if test="sex != null and sex != ''">
                and sex = #{sex}
            </if>
            <if test="address != null and address != ''">
                and address like concat('%',#{address},'%')
            </if>
        </where>
    </select>

    <update id="updateBySet" parameterType="users">
        update users
        <set>
            <if test="userName != null and userName != ''">
                username=#{userName},
            </if>
            <if test="birthday != null">
                birthday = #{birthday},
            </if>
            <if test="sex != null and sex != ''">
                sex = #{sex},
            </if>
            <if test="address != null and address != ''">
                address =#{address} ,
            </if>
        </set>
            where id=#{id}
    </update>

    <select id="getByIds" resultType="users">
        select <include refid="allColumns"></include>
        from users
        where id in
        <foreach collection="array" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </select>

    <delete id="deleteBatch">
        delete from users where id in
        <foreach collection="array" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </delete>

    <insert id="insertBatch">
        insert into users(username, birthday, sex, address) values
        <foreach collection="list" item="u" separator="," >
            (#{u.userName},#{u.birthday},#{u.sex},#{u.address})
        </foreach>
    </insert>
    
    <select id="getByMap" resultType="users">
        select <include refid="allColumns"></include>
        from users
        where birthday between #{birthdayBegin} and #{birthdayEnd}
    </select>
</mapper>